@*@model IEnumerable<ESCOM_FLEET_SYSTEM.Models.COF>*@
@model PaginatedList<ESCOM_FLEET_SYSTEM.Models.COF>
@{
    ViewData["Title"] = "Index";
}

@*@{
    ViewData["Title"] = "Index";
}*@

@*<h1>Index</h1>

    <p>
        <a asp-action="Create">Create New</a>
    </p>*@

@*<h4 class="text-center text-uppercase">List of Licences</h4>*@

<p>
    <a asp-action="Create" class="btn btn-sm btn-primary rounded-0 text-uppercase"><i class="fas fa-plus-circle"></i> Add New COF</a>
</p>

<form class="  d-sm-flex d-flex"  asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            COF Number: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"] " placeholder="Search" />
            <input type="submit" value="Search" class="bg-dark btn btn-outline-warning btn-sm my-0" /> |
            @*<a asp-action="Index">Back to Full List</a>*@
        </p>
    </div>
</form>
@*<table class="table">
    <thead>*@
<form>
    @*<table class="table table-warning table-hover table-sm">*@
    <table class="table table-sm table-striped">
        <thead class="thead-sm text thead-dark">
            <tr>
                <th>
                    @*@Html.DisplayNameFor(model => model.COFNumber)*@
                    COFNumber
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.Issued)*@
                    Issued
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.Expired)*@
                    Expired
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.Remarks)*@
                    Remarks
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.COFNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Issued)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Expired)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Remarks)
                    </td>
                    <td>
                        @*<a asp-action="Edit" asp-route-id="@item.COFId">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.COFId">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.COFId">Delete</a>*@
                        <a class="btn btn-outline-success btn-rounded btn-sm my-0" asp-action="Edit" asp-route-id="@item.COFId"><i class="fas fa-edit"></i></a> |
                        @*<a class="btn btn-outline-info btn-rounded btn-sm my-0" asp-action="Details" asp-route-id="@item.COFId"><i class="fas fa-info-circle"></i></a> |*@
                        <a class="btn btn-outline-danger btn-rounded btn-sm my-0" asp-action="Delete" asp-route-id="@item.COFId"><i class="fas fa-trash-alt"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class=" bg-light btn btn-outline-success @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="bg-light btn btn-outline-success @nextDisabled">
        Next
    </a>

</form>


